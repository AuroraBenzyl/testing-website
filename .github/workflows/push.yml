name: CI
on:
  push

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: corepack enable
        run: corepack enable
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache Node dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: yarn list

      - name: Cache Next Build
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
        
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn run build

      - name: Run dev server for e2e testing
        run: yarn run dev &

      - name: Run Test & generate code-coverage report
        run: yarn run test:coverage:all

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

  
